
def format_task_to_path(Map args) {
	args.up = args.up ?: 0
	args.subdirs = args.subdirs ?: []

	['results']
		.plus(args.task.get('process').split(':'))
		.flatten()
		.dropRight(args.up)
		.plus(args.subdirs)
		.join('/')
}

process {

	// -------------------------------------------------------------------------------------------------
	// apply to all processes
	// -------------------------------------------------------------------------------------------------

	publishDir = [
		enabled: false,
		// path: {format_task_to_path(task)}
		// path: {['results', task.process.replaceAll(':', '/')].join('/')},
		// path: {"${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}"},
		// mode: params.publish_dir_mode,
		// saveAs: {filename -> filename.toUpperCase()}
	]

	// -------------------------------------------------------------------------------------------------
	// cell ranger processes
	// -------------------------------------------------------------------------------------------------

	// cell ranger
	withName: 'quantification:cell_ranger:quantify' {
		publishDir = [
			[enabled: true, path: {format_task_to_path(task: task, up: 1, subdirs: ['outs'])},
			 pattern: 'output/outs',
			 saveAs: {opt.get('dataset id')}],
			[enabled: true, path: {format_task_to_path(task: task, up: 1, subdirs: ['reports'])},
			 pattern: 'web_summary.html',
			 saveAs: {opt.get('dataset id')+'.html'}]]
	}

	// cell ranger arc
	withName: 'quantification:cell_ranger_arc:make_libraries_csv' {
		publishDir = [
			[enabled: true, path: {format_task_to_path(task: task, up: 1)}]]
	}

	withName: 'quantification:cell_ranger_arc:quantify' {
		publishDir = [
			[enabled: true, path: {format_task_to_path(task: task, up: 1, subdirs: ['outs'])},
			 pattern: 'output/outs',
			 saveAs: {opt.get('dataset id')}],
			[enabled: true, path: {format_task_to_path(task: task, up: 1, subdirs: ['reports', opt.get('dataset id')])},
			 pattern: '{atac,joint,rna}_summary.html']]
	}

	// -------------------------------------------------------------------------------------------------
	// seurat processes
	// -------------------------------------------------------------------------------------------------

	// seurat + cell ranger workflow
	withName: 'seurat:prepare_cell_ranger:get_mart' {
		publishDir = [
			[enabled: true, path: {format_task_to_path(task: task)},
			 pattern: 'mart.rds',
			 saveAs: {opt.get('genome') + '.rds'}]]
	}

	withName: 'seurat:prepare_cell_ranger:make_object' {
		publishDir = [
			[enabled: true, path: {format_task_to_path(task: task)},
			 pattern: 'seurat.rds',
			 saveAs: {opt.get('dataset id') + '.rds'}],
			[enabled: true, path: {format_task_to_path(task: task)},
			 pattern: 'task.yaml',
			 saveAs: {opt.get('dataset id') + '.yaml'}]]
	}

	// withName: 'seurat:prepare_cell_ranger:mt_percent' {
	// 	publishDir = [
	// 		[enabled: true, path: {format_task_to_path(task: task)},
	// 		 pattern: 'seurat.rds',
	// 		 saveAs: {opt.get('dataset id') + '.rds'}]]
	// }

	// seurat + cell ranger arc workflow
	withName: 'seurat:prepare_cell_ranger_arc:make_object' {
		publishDir = [
			[enabled: true, path: {format_task_to_path(task: task)},
			 pattern: 'seurat.rds',
			 saveAs: {opt.get('dataset id') + '.rds'}],
			[enabled: true, path: {format_task_to_path(task: task)},
			 pattern: 'task.yaml',
			 saveAs: {opt.get('dataset id') + '.yaml'}]]
	}
}
