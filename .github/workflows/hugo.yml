# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  # push:
  #   branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      scamp_revision:
        description: Nextflow revision, eg commit ID or tag
        default: most-recent-tag

# Save inputs in environment
env:
  INPUT_SCAMP_REVISION: ${{ github.event.inputs.scamp_revision }}

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.113.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Populate man pages
        run: |
          bash bin/populate_docs_with_readmes.sh

      - name: Get scamp commit id
        run: |
          echo "SCAMP_COMMIT="`git rev-parse HEAD` >> $GITHUB_ENV

      - name: Get scamp revision
        run: |
          if [[ $INPUT_SCAMP_REVISION == 'most-recent-tag' ]] || [[ $INPUT_SCAMP_REVISION == "" ]] ; then
            echo "SCAMP_REVISION="`git tag --list | tail -n 1` >> $GITHUB_ENV
          else
            echo "SCAMP_REVISION=$INPUT_SCAMP_REVISION" >> $GITHUB_ENV
          fi

      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
          SCAMP_COMMIT: ${{ env.SCAMP_COMMIT }}
          SCAMP_TAG: ${{ env.SCAMP_REVISION }}
        run: |
          cd docs
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./docs/public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
